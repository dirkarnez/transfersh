name: golang-build-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

      
jobs:
  build:
    strategy:
      matrix:
        container: [ ubuntu-latest, macos-latest, windows-latest ]
        build_type: [ Release ]


    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.container }}
    env:
      targetZip: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.container }}.zip

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.5' # The Go version to download (if necessary) and use.
          
      - run: go get .
      
      - run: go build
      
      - name: Archive Release
        if: ${{ matrix.container == 'windows-latest' }}
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: ${{ github.event.repository.name }}.exe
          filename: "${{ env.targetZip }}"
          
      - name: Archive Release
        if: ${{ matrix.container != 'windows-latest' }}
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: ${{ github.event.repository.name }}
          filename: "${{ env.targetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.targetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
